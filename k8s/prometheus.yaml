---
apiVersion: v1
kind: ConfigMap
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      evaluation_interval: 10s
    rule_files:
      - rules.yml
    alerting:
      alertmanagers:
       - static_configs:
         - targets:
            - alert-manager:9093
    scrape_configs:
     - job_name: prometheus
       static_configs:
        - targets:
           - prometheus:9090
     - job_name: node-exporter
       static_configs:
         - targets:
            - "node-exporter:9100"
     - job_name: go-prom-metrics
       static_configs:
         - targets:
            - "go-prom-metrics:2112"
  rules.yml: |-
    groups:
     - name: prometheus-example
       rules:
       - alert: InstanceDown
         expr: up == 0
         for: 1m
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: prometheus
  name: prometheus-cm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/prometheus-loki-grafana-go-localprom: "true"
        io.kompose.service: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - containerPort: 9090
              hostPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-cm
              subPath: prometheus.yml
            - mountPath: /etc/prometheus/rules.yml
              name: prometheus-cm
              subPath: rules.yml
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: rules.yml
                path: rules.yml
              - key: prometheus.yml
                path: prometheus.yml
            name: prometheus-cm
          name: prometheus-cm
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    io.kompose.service: prometheus
