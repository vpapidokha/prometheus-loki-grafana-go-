---
apiVersion: v1
kind: ConfigMap
data:
  datasource.yml: |-
    apiVersion: 1

    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090 
      isDefault: true
      access: proxy
      editable: true

    - name: Loki
      type: loki
      url: http://loki:3100
      access: proxy
      basicAuth: false
      isDefault: false
      editable: false
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana-cm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/prometheus-loki-grafana-go-localprom: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - name: grafana
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_SECURITY_ADMIN_USER
              value: admin
          image: grafana/grafana
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-cm
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      restartPolicy: Always
      volumes:
        - configMap:
            name: grafana-cm
          name: grafana-cm
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
